BEGIN
--------------------------------------------------------------------
Q1: Implement the following inline functions: 
inline int CircularBufferIsFull(CircularBuffer* que) 
inline int CircularBufferIsEmpty(CircularBuffer* que) 

inline int CircularBufferIsFull(CircularBuffer* que){
    return (que->writePointer + 1) % que->size == que->readPointer;
}

inline int CircularBufferIsEmpty(CircularBuffer* que){
    return que->writePointer == que->readPointer;
}


--------------------------------------------------------------------
Q2: How to compute "Interrupt Latency"?

The Interrupt Latency is the time from when an Interrupt is triggered until the Interrupt process
start. it can be calculated as following:

Interrupt Latency = S+I

S: Time to start the interrupt handler.
I: The interrupt handler time.(time for saving the CPU register contents and find out the cause of interrup and set the interrupt mask) 

--------------------------------------------------------------------
Q3: Serial pc(USBTX, USBRX); // tx, rx 
    What API (function) do you use to change the baud rate?
pc.baud()


--------------------------------------------------------------------
Q4: How many bit(s) does TDO have? Is TDO an input or output type? (Ref: JTAG Pins) 

TDO - Test Data Out - 1 bit.



--------------------------------------------------------------------
Q5:
What is the address of ledArr[0]? LED1: 0x2009C038
What is the address of ch? 0x00


/* 
* Enter a hex number [0-9a-fA-F]; Decode it in 4-bit binary format and display them on 4 on board leds. 
*/ 

#include "mbed.h" 

Serial pc(USBTX, USBRX); // tx, rx 
DigitalOut ledArr[4] = {DigitalOut(LED1), DigitalOut(LED2), DigitalOut(LED3), DigitalOut(LED4)}; 
void DisplayLed(int ch) 
{ 
	int i=0;

	if (ch>='0' && ch<='9')
		ch-='0';
	else if (ch>='A' && ch<='F') {
		ch-='A';
		ch+=10;
	} else if (ch>='a' && ch<='f') {
		ch-='a';
		ch+=10;
	} else
		ch=0;

	for (i=0; i<4; i++) { 
		if(ch& (1<<i))
			ledArr[i] = 1; 
		else
			ledArr[i] = 0;
	} 
} 

int main(void) { 
	int ch; 
	pc.baud(9600); 
	pc.printf("\r\nHello World!"); 
	while(1) { 
		pc.printf("\r\nEnter:"); 
		ch = pc.getc(); 
		pc.putc(ch); 
		DisplayLed(ch); 
	} 
}
